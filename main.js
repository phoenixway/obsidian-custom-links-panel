/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var f=Object.prototype.hasOwnProperty;var d=(s,e)=>{for(var t in e)r(s,t,{get:e[t],enumerable:!0})},u=(s,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of w(e))!f.call(s,i)&&i!==t&&r(s,i,{get:()=>e[i],enumerable:!(n=g(e,i))||n.enumerable});return s};var v=s=>u(r({},"__esModule",{value:!0}),s);var L={};d(L,{default:()=>l});module.exports=v(L);var a=require("obsidian"),l=class extends a.Plugin{async onload(){this.addRibbonIcon("link","Open Links Panel",()=>{this.activateView()}),this.registerView("links-panel",e=>new o(e)),this.app.workspace.onLayoutReady(()=>{this.activateView()}),this.registerEvent(this.app.workspace.on("active-leaf-change",()=>this.updateView())),this.registerEvent(this.app.workspace.on("editor-change",()=>this.updateView())),this.addCommand({id:"toggle-links-panel",name:"Toggle Links Panel",callback:()=>this.toggleView()})}async toggleView(){this.app.workspace.getLeavesOfType("links-panel").length>0?await this.app.workspace.detachLeavesOfType("links-panel"):this.activateView()}async activateView(){let{workspace:e}=this.app,t=null,n=e.getLeavesOfType("links-panel");if(n.length>0)t=n[0];else if(t=e.getRightLeaf(!1),t)await t.setViewState({type:"links-panel",active:!0});else{console.error("Failed to create a new leaf for the links panel.");return}e.revealLeaf(t)}async updateView(){let e=this.app.workspace.getLeavesOfType("links-panel");e.length>0&&e[0].view.update()}},o=class extends a.ItemView{constructor(e){super(e)}getViewType(){return"links-panel"}getDisplayText(){return"Links Panel"}getIcon(){return"link"}async onOpen(){let e=this.containerEl.children[1];e.empty(),e.createEl("div",{cls:"links-container"}),this.update()}async update(){let e=this.app.workspace.getActiveViewOfType(a.MarkdownView),t=this.containerEl.querySelector(".links-container");if(e&&t){let n=e.getViewData(),i=this.extractLinksSection(n);i?t.innerHTML=this.renderLinks(i):t.innerHTML="No links found."}}extractLinksSection(e){let t=/##\s*.*Links.*\n([\s\S]*?)(?=\n##|$)/i,n=e.match(t);return n?n[1].trim():null}renderLinks(e){let t=/\[\[(.*?)\]\]/g,n=e.matchAll(t),i="<ul>";for(let p of n){let k=p[1],[c,h]=k.split("|");i+=`<li class="link-item"><a href="#" data-href="${c}" onclick="app.workspace.openLinkText('${c}', '', 'tab'); return false;">${h||c}</a></li>`}return i+="</ul>",i||"No links found."}};
